{"ast":null,"code":"var _jsxFileName = \"/Users/jatinchopra/Documents/MERN STACK TUTORIAL/ITunes API/itunesapi/src/components/SearchList.js\";\nimport React from 'react';\nimport { Audiosong } from './Audio';\nexport const SearchList = props => {\n  let totalNumberOfRecords = props.Audiodata.length;\n  const norecord = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, \"No Record Found\");\n  const successrecord = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }\n  }, \"List of records \", totalNumberOfRecords)), props.Audiodata.map(ele => /*#__PURE__*/React.createElement(Audiosong, {\n    src: ele.previewUrl,\n    type: \"audio/mpeg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 35\n    }\n  })));\n  console.log(\"Props\", props.Audiodata);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, props.Audiodata.length == 0 ? norecord : successrecord);\n};","map":{"version":3,"sources":["/Users/jatinchopra/Documents/MERN STACK TUTORIAL/ITunes API/itunesapi/src/components/SearchList.js"],"names":["React","Audiosong","SearchList","props","totalNumberOfRecords","Audiodata","length","norecord","successrecord","map","ele","previewUrl","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,SAAxB;AACA,OAAO,MAAMC,UAAU,GAAEC,KAAD,IAAS;AAC7B,MAAIC,oBAAoB,GAACD,KAAK,CAACE,SAAN,CAAgBC,MAAzC;AACA,QAAMC,QAAQ,gBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ;AAGA,QAAMC,aAAa,gBACf,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAwBJ,oBAAxB,CAAH,CADA,EAECD,KAAK,CAACE,SAAN,CAAgBI,GAAhB,CAAoBC,GAAG,iBAAE,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,GAAG,CAACC,UAApB;AAAgC,IAAA,IAAI,EAAC,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,CAFD,CADJ;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBV,KAAK,CAACE,SAA1B;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACE,SAAN,CAAgBC,MAAhB,IAAwB,CAAxB,GAA0BC,QAA1B,GAAmCC,aADxC,CADJ;AAMH,CAlBM","sourcesContent":["import React from 'react';\nimport {Audiosong} from './Audio';\nexport const SearchList=(props)=>{\n    let totalNumberOfRecords=props.Audiodata.length;\n    const norecord =(\n        <p>No Record Found</p>\n    )\n    const successrecord =(\n        <>\n        <p><label>List of records {totalNumberOfRecords}</label></p>\n        {props.Audiodata.map(ele=><Audiosong src={ele.previewUrl} type=\"audio/mpeg\" />)}\n        </>\n    )\n    console.log(\"Props\",props.Audiodata);\n    return(\n        <div>\n            {props.Audiodata.length==0?norecord:successrecord}\n            \n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}